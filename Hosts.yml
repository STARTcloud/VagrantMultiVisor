---
## Each Yaml block in Hosts is a seperate virtual machine.
path: "."
hosts:
  -
    ## Box Source
    box: "STARTcloud/debian11-server"
    boxshortname:  debian11-server
    cloud_creator: STARTcloud

    # Development Settings
    open-browser: true

    # Support Settings
    email: "mark.gilbert@prominic.net"

    ## Server Details
    domain: example.com
    subdomain: demo
    partition_id: "4020"
    provider-type: virtualbox
    ## Zone specific setting for Naming conventions
    vmtype: production
    description: "This is a Automated Domino install setup"

    ## User Configurations
    ## These are the default for STARTcloud boxes
    vagrant_user_private_key_path: ./id_rsa
    vagrant_user: startcloud
    vagrant_user_pass: "STARTcloud22@!"
    vagrant_insert_key: false

    ## CPU configuration( complex is for ZONE types only): complex / simple
    ## VBox is not recommended above 4 CPU Cores
    cpu_configuration: simple
    simple_vcpu_conf: 3
    complex_cpu_conf:
      -
        sockets: 2
        cores: 4
        threads: 2

    ## RAM Allocation -- Vbox can only be set in Megabytes
    zone_memory: 4G
    vbox_memory: 6156

    ## Virtualbox OS Type. See VBoxManage for more details
    vbox_os_type: "Debian_64"
    ## Zone VM type: generic (default) / openbsd / windows
    os_type: generic


    ## Disks
    ## Vbox does not respect these variables at this time.
    boot:
      array: Array-0
      dataset: zones
      volume_name: boot
      size: 30G
      sparse: true

    additional_disks:
    #   -
    #     array: Array-1
    #     dataset: zones
    #     volume_name: disk1
    #     size: 20G
    #     sparse: true
    #     live: yes
    #   -
    #     array: rpool
    #     dataset: zones
    #     volume_name: disk2
    #     size: 10G
    #     sparse: true
    #     live: yes

    ## Networking -- Some options may not translate to VMs started with Virtualbox. 
    ## Note that VBox creates a default NAT adapter then it will create a bridged adapter on each of the following
    ## Vbox currently requires the mac address to be set in order to override the networking interface
    networks:
      -
        address: 192.168.2.227
        netmask: 255.255.255.0
        gateway: 192.168.2.1
        autoconf: true
        vlan: 
        dhcp4: true
        dhcp6: false
        bridge: vnice3_0000_0
        type: external
        ## Used to tell vagrant-zones which Nic to run Vagrant ssh across
        is_control: true
    #    mac: auto
        mac: "52:54:00:12:34:0c"
        vmac: "52540012340c"
    #    type: host
    #  -
    #    address: 192.168.2.227
    #    netmask: 255.255.255.0
    #    gateway: 192.168.2.1
    #    mac: 52:54:0f:c9:c2:36
    #    mac: auto
    #    vlan: 44
    #    dhcp4: no
    #    dhcp6: no
    #    bridge: ixgbe0
    #    type: host
    #    is_control: true

    ## DNS
    dns:
      -
        nameserver: 192.168.2.253
      -
        nameserver: 192.168.2.254

    ## Emergency Console Access
    consoleport: 4019
    consolehost: 0.0.0.0
    
    ## Zone Only Console Settings -- webvnc -- vnc -- console -- disabled (zlogin)
    console_onboot: false
    console: webvnc

    ##### Begin Virtualbox Only Settings #####
    ## Virtualbox Port Forwards
    vbox-port-forwards:
      -
        guest: 8080
        host: 8080
        ip: 127.0.0.1
        comment: restapi

    ## Virtualbox Extra Directives
    vbox-directives: 
      - 
        directive: vrde
        value: "on"
      - 
        directive: natdnsproxy1
        value: "off"
      - 
        directive: natdnshostresolver1
        value: "off"
      - 
        directive: accelerate3d
        value: "off"
      - 
        directive: vram
        value: "256"
      - 
        directive: firmware
        value: "efi"
    ##### End Virtualbox Only Settings #####

    ##### Begin Zone Only Settings #####
    ## Used to show more info
    debug: false
    debug_boot: false

    ## ipkg / lipkg / sparse / pkgsrc / lx / bhyve (default) / kvm / illumos
    brand: bhyve

    ## UEFI, compatability, BIOS, BHYVE_DEBUG, BHYVE_RELEASE_CSM

    firmware_type: UEFI
    acpi: on
    hostbridge: i440fx
    autostart: true

    ## ahci / virtio (default)
    diskif: virtio-blk
    ## virtio-net-pci (default) / e1000 / virtio-net-viona
    netif: virtio-net-viona

    ## Encrypted Dataset Unlock Key and search phrase
    #zunlockbootkey: "SomeSecurePassword"
    #zunlockboot: "process volume group crypt"
    #zunlockboot: "unlock disk"

    ## Configuration Method, zlogin/dhcp(ie NAT)
    setup_method: zlogin

    ## Zone Successfully Booted String
    booted_string: 'Web console:'

    ## Login Check String via zlogin
    lcheck_string: ':~$'

    ## Automatic Login Check String used to detect if we need to enter a password to access the console via zlogin
    alcheck_string: "login:"

    ## Shutdown commands
    safe_restart: "sudo shutdown -r"
    safe_shutdown: "sudo init 0 || true"
    clean_shutdown_time: 200

    ### Begin Cloud-init Configurations ###
    cloud_init_enabled: off
    # Uncomment conf if using a URL or File for Userdata
    # Comment if using built in userdata generator
    cloud_init_conf: http://192.168.0.16:4456/user-data
    ## If using a user-data file, the built in user-data generator will set the network so long as you disable allowed-address:
    allowed_address: false
    cloud_init_dnsdomain: mydomain.com
    custom_ci_web_root: '.'
    ci_port: 4456
    ci_listen: 0.0.0.0
    custom_ci: true
    ### End Cloud-init Configurations ###

    cdroms:
    #   -
    #     path: /rpool/ISOs/gparted.iso

    ## Shared Mounted Disk -- WIP
    shared_lofs_disk_enabled: false
    shared_lofs_dir: '../example-provisioner-scripts/ansible/'

    # Script Used for Snapshots
    snapshot_script: '/opt/vagrant/bin/Snapshooter.sh'

    ##### End Zone Only Settings #####

    ##### Begin Provisioning Settings #####
    ## Provisioning Settings
    setup_wait: 240
    ansible_provision: true
    shell_provision: false

    ## clone branch of repo -- WIP
    branch:

    ## Shell Scripts
    provision_scripts:
      - "./scripts/aliases.sh"

    ## Ansible Scripts
    ## Ansible Notes: Ansible-local runs on the VM, Ansible (without -local) runs on the host
    ansible_provision_scripts:
      -
        local: 
          - 
            script: ansible/Setup.yml
            ansible_python_interpreter: /usr/bin/python3
            compatibility_mode: 2.0
            install_mode: pip
    #  -
    #    remote: 
    #      - 
    #        script: ansible/Setup.yml
    #        ansible_python_interpreter: /usr/bin/python3
    #        compatibility_mode: 2.0
    ##### End Provisioning Settings #####

    ##### Begin Synced Folders #####
    ## When using Virtualbox The first thing it tries to mount is VBoxGuest additions share
    ## This is broken or out of date, or presents an issue on a myriad of operating systems
    ## set disabled to true and type to virtualbox on the first block to ensure this is disabled.
    folders:
      -
        map: .
        to: /vagrant
        type: virtualbox
        disabled: true
        automount: true
      -
        map: ./ansible/
        to: /vagrant/ansible/
        type: rsync
        rsync__args:
          - "--verbose"
          - "--archive"
          - "--delete"
          - "-z"
          - "--copy-links"

    rolevars:
      ansible_ssh_pipelining: true
      ## Global Variables
      ## Variables in Double Brackets {{ somevarname }} are variables interprted from other variables in this yaml or above.

      ## Using "ansible-local" as your provisioner will break on any reboots. 
      ## If you need to use ansible-local due to lack of ansible on your local host, seperate the code into two blocks
      timezone: 'America/Chicago'
      countrycode: US
